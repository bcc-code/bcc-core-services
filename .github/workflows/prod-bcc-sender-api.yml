name: PROD Sender API

on:
  pull_request:
    branches:
      - master
    paths:
      - "bcc-sender/api/**"
      - ".github/workflows/prod-bcc-sender-api.yml"

env:
  GCP_PROJECT: budget-app-329411
  GCP_SA_KEY: ${{ secrets.PROD_GCP_SA_BUDGET_KEY }}
  TWILIO_ACCOUNT_SID: ${{ secrets.PROD_TWILIO_ACCOUNT_SID }}
  TWILIO_MESSAGING_SERVICE_SID: ${{ secrets.PROD_TWILIO_MESSAGING_SERVICE_SID }}
  TWILIO_AUTH_TOKEN: ${{ secrets.PROD_TWILIO_AUTH_TOKEN }}
  MS_FLOW_URL: ${{secrets.MS_FLOW_URL}}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ env.GCP_SA_KEY }}
          export_default_credentials: true
      - uses: actions/checkout@v2

      - uses: microsoft/variable-substitution@v1
        with:
          files: "bcc-sender/api/bcc-sender-api/appsettings.json"
        env:
          origins: ${{ env.Origins }}
          Twilio.AccountSid: ${{ env.TWILIO_ACCOUNT_SID }}
          Twilio.MessagingServiceSid: ${{ env.TWILIO_MESSAGING_SERVICE_SID }}
          Twilio.AuthToken: ${{ env.TWILIO_AUTH_TOKEN }}
          MsFlowEmailUrl: ${{ env.MS_FLOW_URL }}

      - name: Read bcc-sender/api/bcc-sender-api/appsettings.json
        run: "cat bcc-sender/api/bcc-sender-api/appsettings.json"

      - name: Build the Docker image
        run: |
          cd bcc-sender/api/bcc-sender-api
          docker build . -t eu.gcr.io/${{env.GCP_PROJECT}}/bcc-sender-prod --build-arg ASPNETCORE_ENVIRONMENT=Development

      - name: Configure Docker to use Google Cloud Platform
        run: gcloud auth configure-docker --quiet

      - name: Docker push image
        run: docker push eu.gcr.io/${{env.GCP_PROJECT}}/bcc-sender-prod

  deploy:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: false

    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ env.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Cloud run deploy
        run: gcloud run deploy bcc-sender-prod --image eu.gcr.io/${{env.GCP_PROJECT}}/bcc-sender-prod --region=europe-west1 --project=${{env.GCP_PROJECT}} --memory=1024M --max-instances=10 --cpu=2 --timeout=120 --port=5000 --set-env-vars "ASPNETCORE_ENVIRONMENT=Development" --allow-unauthenticated

      - name: Cloud run serve traffic
        run: gcloud run services update-traffic bcc-sender-prod --to-latest --platform=managed --region=europe-west1
# local fallback deploy:
# gcloud builds submit --tag gcr.io/budget-app-dev-329411/bcc-sender-dev && gcloud run deploy bcc-sender-dev --image gcr.io/budget-app-dev-329411/bcc-sender-dev --region=europe-west1 --project=budget-app-dev-329411 --memory=1024M --max-instances=10 --cpu=2 --timeout=120 --port=5001 --set-env-vars "ASPNETCORE_ENVIRONMENT=Development" --allow-unauthenticated
