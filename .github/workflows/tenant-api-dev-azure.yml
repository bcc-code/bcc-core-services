name: DEV Tenants API - Azure

on:
  pull_request:
    branches: master
    paths:
      - bcc-tenants/**
      - .github/workflows/tenant-api-dev-azure.yml  
  workflow_dispatch:

env:
  APP_CONTEXT: bcc-tenants
  DOCKERFILE_PATH: bcc-tenants/Bcc.Tenants.Api/Dockerfile
  APP_NAME: tenants-api-dev
  APP_ENV_NAME: bcc-platform-env-dev
  RESOURCE_GROUP: BCC-Platform-Dev
  DAPR_PORT: 3500
  COMPONENTS_PATH: dapr-components/statestore.yaml
  REGISTRY_USERNAME: ${{ secrets.DEV_REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.DEV_REGISTRY_PASSWORD }}
  AZURE_CREDENTIALS: ${{ secrets.DEV_AZURE_CREDENTIALS }}
  CONTAINER_REGISTRY: bccplatformdev.azurecr.io

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: show folder structure
        run: ls

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.CONTAINER_REGISTRY }}/${{env.APP_NAME}}:${{ github.sha }}
          context: ${{env.APP_CONTEXT}}
          file: ${{env.DOCKERFILE_PATH}}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Create or update app in azure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://containerappcli.blob.core.windows.net/containerapp/containerapp-0.1.3-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp registry set -n ${{env.APP_NAME}} -g ${{env.RESOURCE_GROUP}} --server ${{ env.CONTAINER_REGISTRY }} --username  ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }} --debug

            az containerapp create -n ${{env.APP_NAME}} -g ${{env.RESOURCE_GROUP}} \
                --environment ${{env.APP_ENV_NAME}} \
                --min-replicas 1 \
                --max-replicas 1 \
                --debug
            