name: DEV Tenants API

on:
  pull_request:
    branches:
      [ master ]
    paths:
      - bcc-tenants/**
      - .github/workflows/tenant-api-dev.yml  
  workflow_dispatch:

env:
  APP_PATH: bcc-tenants/Bcc.Tenants
  APP_NAME: tenants-api-dev
  APP_ENV_NAME: bcc-platform-env-dev
  RESOURCE_GROUP: BCC-Platform-Dev
  DAPR_PORT: 3500
  COMPONENTS_PATH: dapr-components/statestore.yaml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: daprimages.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: show folder structure
        run: ls

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: daprimages.azurecr.io/${{env.APP_NAME}}:${{ github.sha }}
          context: ${{env.APP_PATH}}
          file: ${{env.APP_PATH}}/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create or update app in azure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "check if app exists"
            existing_app=$(az containerapp show -n ${{env.APP_NAME}} -g ${{env.RESOURCE_GROUP}})
            if [[ ${#existing_app} -gt 0 ]]
            then
              az containerapp update -n ${{env.APP_NAME}} -g ${{env.RESOURCE_GROUP}} \
                -i daprimages.azurecr.io/${{env.APP_NAME}}:${{ github.sha }} \
                --registry-login-server daprimages.azurecr.io \
                --registry-username  ${{ secrets.REGISTRY_USERNAME }} \
                --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
                --min-replicas 1 \
                --max-replicas 1 \
                --enable-dapr \
                --dapr-app-port ${{env.DAPR_PORT}} \
                --dapr-app-id ${{env.APP_NAME}} \
                --dapr-components ${{env.COMPONENTS_PATH}} \
                --debug
            else
              az containerapp create -n ${{env.APP_NAME}} -g ${{env.RESOURCE_GROUP}} \
                --environment ${{env.APP_ENV_NAME}} \
                -i daprimages.azurecr.io/${{env.APP_NAME}}:${{ github.sha }} \
                --registry-login-server daprimages.azurecr.io \
                --registry-username  ${{ secrets.REGISTRY_USERNAME }} \
                --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
                --min-replicas 1 \
                --max-replicas 1 \
                --enable-dapr \
                --dapr-app-port ${{env.DAPR_PORT}} \
                --dapr-app-id ${{env.APP_NAME}} \
                --dapr-components ${{env.COMPONENTS_PATH}} \
                --debug
            fi