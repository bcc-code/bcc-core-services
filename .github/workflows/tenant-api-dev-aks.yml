name: DEV Tenants API - AKS

on:
  pull_request:
    branches:
      [ master ]
    paths:
      - bcc-tenants/**
      - .github/workflows/tenant-api-dev-aks.yml
  workflow_dispatch:
        
env:
  REGISTRY_NAME: bccplatformdev
  CLUSTER_NAME: bcc-platform-dev
  CLUSTER_RESOURCE_GROUP: BCC-Platform-Dev
  SECRET: bcc-platform-dev 
  APP_NAME: tenants-api-dev
  APP_PATH: bcc-tenants/Bcc.Tenants
  AZURE_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  AZURE_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      
      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ env.AZURE_REGISTRY_USERNAME }}
          password: ${{ env.AZURE_REGISTRY_PASSWORD }}
      
      # Container build and push to a Azure Container Registry (ACR)
      - run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        working-directory: ${{env.APP_PATH}}/Dockerfile
        
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
      
      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ env.AZURE_REGISTRY_USERNAME }}
          container-registry-password: ${{ env.AZURE_REGISTRY_PASSWORD }}
          secret-name: ${{ env.SECRET }}
          arguments: --force true
      
      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: |
            ${{ github.workspace }}/${{ env.APP_PATH }}/deployment.yaml
            ${{ github.workspace }}/${{ env.APP_PATH }}/service.yaml
          images: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          imagepullsecrets: |
            ${{ env.SECRET }}