name: DEV Tenants API - AKS

on:
  pull_request:
    branches:
      [ master ]
    paths:
      - bcc-tenants/**
      - .github/workflows/tenant-api-dev-aks.yml
  workflow_dispatch:
        
env:
  REGISTRY_NAME: bccplatformdev
  CLUSTER_NAME: bcc-platform-dev
  CLUSTER_RESOURCE_GROUP: BCC-Platform-Dev
  SECRET: bcc-platform-dev 
  APP_NAME: tenants-api-dev
  APP_CONTEXT: bcc-tenants
  APP_PATH: bcc-tenants/Bcc.Tenants.Api
  AZURE_REGISTRY_USERNAME: ${{ secrets.DEV_REGISTRY_USERNAME }}
  AZURE_REGISTRY_PASSWORD: ${{ secrets.DEV_REGISTRY_PASSWORD }}
  AZURE_CREDENTIALS: ${{ secrets.DEV_AZURE_CREDENTIALS }}
  NAMESPACE: bcc-platform-dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      
      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ env.AZURE_REGISTRY_USERNAME }}
          password: ${{ env.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          context: ${{env.APP_CONTEXT}}
          file: ${{env.APP_PATH}}/Dockerfile
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: false
    
    steps:
      - uses: actions/checkout@main

      - uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.aks_bccplatformdev_kubeConfig }}
        id: login

      - name: Create namespace
        run: |
          namespacePresent=`kubectl get namespace | grep ${{ env.NAMESPACE }} | wc -l`
          if [ $namespacePresent -eq 0 ]
          then
              echo `kubectl create namespace ${{ env.NAMESPACE }}`
          fi
          
      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v1
        with:
          namespace: ${{ env.NAMESPACE }}
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ env.AZURE_REGISTRY_USERNAME }}
          container-registry-password: ${{ env.AZURE_REGISTRY_PASSWORD }}
          secret-name: ${{ env.SECRET }}
      
      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1.2
        with:
          namespace: ${{ env.NAMESPACE }}
          manifests: |
            ${{ env.APP_PATH }}/deployment.yml
            ${{ env.APP_PATH }}/service.yml
          images: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          imagepullsecrets:  ${{ env.SECRET }}            